name: Build Pages
on: 
  issues:
    types: [opened, edited]

env:
  owner: context.repo.owner
  repo: context.repo.repo
  target_issue_id: context.payload.issue.id

jobs:
  build-pages:
    runs-on: ubuntu-latest
    steps:
      - name: View github-script context
        uses: actions/github-script@v6
        with:
          script: console.log(context)

      - name: Checkout blog repo
        uses: actions/checkout@v3

      - name: Install Octokit and Mustache
        run: npm install @octokit/rest mustache
      
      - name: Env test
        uses: actions/github-script@v6
        with:
          script: |
            console.log(process.env)
            
      

      - name: Build pages
        uses: actions/github-script@v6
        with:
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({});
            const Mustache = require('mustache');
            const fs = require("fs");
            
            octokit.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            .then(issues => {
              // Build index
              const index_template = fs.readFileSync("template/index.template.html", "utf8").toString();
              const index_html = Mustache.render(index_template, issues)
              fs.writeFileSync("index.html", index_html, "utf8");

              // Build post
              target_issue = issues.data.filter((ti) => {
               return ti.id == context.payload.issue.id
              });
              markdown = target_issue[0].body
              const issue_template = fs.readFileSync("template/post.template.html", "utf8").toString();
              octokit.rest.markdown.render({"text": markdown, "mode": "gfm"})
              .then(issue_html => {
                const issue_page = Mustache.render(issue_template, issue_html)
                fs.writeFileSync("posts/" + context.payload.issue.id + ".html", issue_page, "utf8");
              })
            });
   
      - name: Git setting
        run: |
          git config --local user.email "narusan@mac.com"
          git config --local user.name "${{github.actor}}"
          
      - name: Commit and push pages
        run: |
          git add index.html posts/${{github.event.issue.id}}.html
          git commit -m "update" -a
          git pull
          git push origin main
