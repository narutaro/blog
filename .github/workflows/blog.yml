name: Build Blog
on: 
  issues:
    types: [opened, edited]

jobs:
  get-issues:
    runs-on: ubuntu-latest
    steps:
      - name: View the target issue information
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue body: ${{ github.event.issue.body }}"

      - name: View the github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: List all the issues in the repo
        run: |
          echo "Issue URL: ${{ github.event.repository.id }}"
          echo "Issue URL: ${{ github.event.repository.issues_url }}"

      - uses: actions/github-script@v6
        id: check-context
        with:
          script: |
            console.log(context)
            
      - name: Single line
        id: single-line
        run: |
          markdown="${{ github.event.issue.body }}"
          #markdown="${markdown//'%'/'%25'}"
          #markdown="${markdown//$'\n'/'%0A'}"
          #markdown="${markdown//$'\r'/'%0D'}" 
          markdown="${markdown//$'\n'/\\n}"
          markdown="${markdown//$'\r'/\\r}"
          echo $markdown
          echo "::set-output name=markdown::$markdown"

      - name: API
        id: markdown-to-html
        run: |
              curl -s \
                -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                #https://api.github.com/markdown -d '{"text": "#Hello"}'
                https://api.github.com/markdown -d '${{ steps.single-line.outputs.markdown }}'
                

#      - name: Install Octokit
#        run: npm install @octokit/rest

#      - uses: actions/github-script@v6
#        with:
#          script: |
#            const { Octokit } = require("@octokit/rest");
#            const octokit = new Octokit({});
#            html = await octokit.request('POST /markdown', {"text": '${{ github.event.issue.body }}'})
#            console.log(html)
